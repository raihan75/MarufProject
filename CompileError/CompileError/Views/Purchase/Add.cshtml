@model CompileError.Models.PurchaseModelView
@{
    Layout = "~/Views/Shared/_KLayout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add</title>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css"/>
    
    @section MyCSS
    {
        
    }

</head>


<body>
    <div>
        @* ..Main Section.. *@

        <div class="panel panel-info">
            <div class="panel-heading">
                <h2 class="panel-title">Purchase Products</h2>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm(FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <h2 class="panel-title">Purchase</h2>
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                @Html.LabelFor(c => c.Date)
                                @Html.TextBoxFor(c => c.Date
                                , new {@class = "form-control", @type = "date", placeholder = "Enter Date"})
                                @Html.ValidationMessageFor(c => c.Date, "", new {@class = "text-danger"})
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.BillNo)
                                @Html.TextBoxFor(c => c.BillNo,
                                    new {@class = "form-control", placeholder = "Enter Name"})
                                @Html.ValidationMessageFor(c => c.BillNo, "",
                                    new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.SupplierId)
                                @Html.DropDownListFor(c => c.SupplierId, Model.SupplierSelectListItems, "--select", new { @class = "form-control" })
                                @*@Html.TextBoxFor(c => c.SupplierId,
                                    new {@class = "form-control", placeholder = "Enter Name"})*@
                                @Html.ValidationMessageFor(c => c.SupplierId, "",
                                    new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <h2 class="panel-title">Products</h2>
                        </div>
                        <div class="panel-body">
                            @*..Products..*@
                            <div class="form-group">
                                @Html.LabelFor(c => c.CategoryId)
                                @Html.DropDownListFor(c => c.CategoryId, Model.CategorySelectListItems, "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.CategoryId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.ProductId)
                                @Html.DropDownListFor(c => c.ProductId, Model.ProductSelectListItems, "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.ProductId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.ProductCode)
                                @Html.TextBoxFor(c => c.ProductCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.ProductCode, "",
                                    new {@class = "text-danger"})
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.AvailableQuantity)
                                @Html.TextBoxFor(c => c.AvailableQuantity, new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.AvailableQuantity, "",
                                    new {@class = "text-danger"})
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.ManufactureDate)
                                @Html.TextBoxFor(c => c.ManufactureDate, new { @class = "form-control", placeholder = "Enter Code", type="date" })
                                @Html.ValidationMessageFor(c => c.ManufactureDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.ExpireDate)
                                @Html.TextBoxFor(c => c.ExpireDate, new { @class = "form-control", placeholder = "Enter Code", type="date" })
                                @Html.ValidationMessageFor(c => c.ExpireDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.Quantity)
                                @Html.TextBoxFor(c => c.Quantity, new { @class = "form-control", placeholder = "Enter Code", type="number" })
                                @Html.ValidationMessageFor(c => c.Quantity, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.UnitPrice)
                                @Html.TextBoxFor(c => c.UnitPrice, new { @class = "form-control", placeholder = "Enter Code", type="number" })
                                @Html.ValidationMessageFor(c => c.UnitPrice, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.TotalPrice)
                                @Html.TextBoxFor(c => c.TotalPrice, new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.TotalPrice, "",
                                    new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.PreviousUnitPrice)
                                @Html.TextBoxFor(c => c.PreviousUnitPrice, new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.PreviousUnitPrice, "",
                                    new {@class = "text-danger"})
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.PreviousMrp)
                                @Html.TextBoxFor(c => c.PreviousMrp, new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.PreviousMrp, "",
                                    new {@class = "text-danger"})
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.Mrp)
                                @Html.TextBoxFor(c => c.Mrp, new { @class = "form-control", placeholder = "Enter Code" })
                                @Html.ValidationMessageFor(c => c.Mrp, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(c => c.Remarks)
                                @Html.TextAreaFor(c => c.Remarks, new { @class = "form-control", placeholder = "Enter Remarks" })
                                @Html.ValidationMessageFor(c => c.Remarks, "", new { @class = "text-danger" })
                            </div>
                            
                            <button class="btn btn-success" id="addButton">Add</button>

                        </div>
                    </div>

                    
                    @*<div>
                        @{
                            Html.RenderPartial("~/Views/Shared/Purchase/_InCartProducts.cshtml", Model);

                        }
                    </div>*@

                    <div id="PurchasedProductSection">

                    </div>


                    <input type="submit" value="Purchase" class="btn-lg btn-primary"/>
                 }
            </div>
        </div>

    </div>

    @* ......Scripts........ *@
    @section MyScript
    {

        @*<script src="~/Scripts/jquery-1.9.1.min.js"></script>*@
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        
        <script>
            $(document).ready(function() {
                $('#CategoryId').change(function(e) {
                    var id = e.target.value;
                    console.log(id);

                    var jsonId = { categoryId: id };
                    $('#ProductId').empty();
                    $('#ProductId').append(new Option("--Select--",0));
                    $.ajax({
                        url: "/Purchase/GetProductJsonResult",
                        type: "POST",
                        data: jsonId,
                        success: function(products) {
                            $.each(products, function (index, value)
                            {
                                //console.log(value);
                                $("#ProductId").append(new Option(value.Name, value.Id));
                            });
                        },
                        error: ""
                    });


                });

                $('#ProductId').change(function (e) {
                    var id = e.target.value;
                    console.log(id);

                    var jsonId = { productId: id };
                    $.ajax({
                        url: "/Purchase/GetProductInfoJsonResult",
                        type: "POST",
                        data: jsonId,
                        success: function (productInfo) {
                            $("#PreviousMrp").val(productInfo.PreviousMrp);
                            $("#PreviousUnitPrice").val(productInfo.PreviousUnitPrice);
                            $("#ProductCode").val(productInfo.ProductCode);

                        },
                        error: ""
                    });


                });

               
                $("#Quantity").keyup(function(e) {
                    //alert("inQuantity");

                    var quantity = e.target.value;
                    console.log(quantity);
                    var unitPrice = $("#UnitPrice").val();
                    if (quantity == "" || unitPrice == "") {
                        $("#TotalPrice").val(0);
                    }
                    else {
                        $("#TotalPrice").val(quantity * unitPrice);
                    }
                });

                $("#UnitPrice").keyup(function (e) {
                    //alert("inQuantity");

                    var unitPrice = e.target.value;
                    console.log(unitPrice);
                    var quantity = $("#Quantity").val();
                    if (quantity == "" || unitPrice == "") {
                        $("#TotalPrice").val(0);
                    }
                    else {
                        var totalPrice = (quantity * unitPrice).toFixed(2);
                        $("#TotalPrice").val(totalPrice);
                    }

                    if (unitPrice != "") {
                        console.log(unitPrice*.25);
                        var mrp =Number(unitPrice) + Number(unitPrice * .25);
                        $("#Mrp").val(mrp);
                    } else {
                        $("#Mrp").val(0);
                    }
                });


                $("#addButton").click(function() {
                    $("form").validate();

                    //$.ajax({
                    //    url: "/Purchase/TestF",
                    //    type: "POST",
                    //    data: { a: 2 },
                    //    success: function (vv) {
                    //        alert("IN");
                    //        console.log("ddd");
                    //        //$("#partial").html(vv);
                    //    },
                    //    error: function () {
                    //        alert("out");
                    //    }
                    //});

                         var categoryId = $("#CategoryId").val();
                        var productCode = $("#ProductCode").val();
                        var manufactureDate = $("#ManufactureDate").val();
                        var expireDate = $("#ExpireDate").val();
                        var quantity = $("#Quantity").val();
                        var unitPrice = $("#UnitPrice").val();
                        var totalPrice = $("#TotalPrice").val();
                        var mrp = $("#Mrp").val();
                        var remarks = $("#Remarks").val();

                        var jsonProductInfo = {
                            CategoryId: categoryId,
                            ProductCode: productCode,
                            ManufactureDate: manufactureDate,
                            ExpireDate: expireDate,
                            Quantity: quantity,
                            UnitPrice: unitPrice,
                            TotalPrice: totalPrice,
                            Mrp: mrp,
                            Remarks: remarks
                        };

                        $.ajax({
                            //url: "/Purchase/AddToPurchaseCart",
                            url:"/Purchase/TestF",
                            type: "POST",
                            data: jsonProductInfo,
                            success: function(e) {
                                alert("Inside Cart!");
                                console.log(e);
                                $("#PurchasedProductSection").html(e);
                            },
                            error: function() {
                                alert("Inside Cart Error!");
                            }
                        });

                    //if ($("form").valid()) {
                    //    var categoryId = $("#CategoryId").val();
                    //    var productCode = $("#ProductCode").val();
                    //    var manufactureDate = $("#ManufactureDate").val();
                    //    var expireDate = $("#ExpireDate").val();
                    //    var quantity = $("#Quantity").val();
                    //    var unitPrice = $("#UnitPrice").val();
                    //    var totalPrice = $("#TotalPrice").val();
                    //    var mrp = $("#Mrp").val();
                    //    var remarks = $("#Remarks").val();

                    //    var jsonProductInfo = {
                    //        CategoryId: categoryId,
                    //        ProductCode: productCode,
                    //        ManufactureDate: manufactureDate,
                    //        ExpireDate: expireDate,
                    //        Quantity: quantity,
                    //        UnitPrice: unitPrice,
                    //        TotalPrice: totalPrice,
                    //        Mrp: mrp,
                    //        Remarks: remarks
                    //    };

                    //    //$.ajax({
                    //    //    //url: "/Purchase/AddToPurchaseCart",
                    //    //    url:"/Purchase/TestF",
                    //    //    type: "POST",
                    //    //    data: jsonProductInfo,
                    //    //    success: function(e) {
                    //    //        alert("Inside Cart!");
                    //    //        console.log(e);
                    //    //        //$("#PurchasedProductSection").html(e);
                    //    //    },
                    //    //    error: function() {
                    //    //        alert("Inside Cart Error!");
                    //    //    }
                    //    //});


                        

                    //}
                });
            });
        </script>
    }


</body>
</html>
